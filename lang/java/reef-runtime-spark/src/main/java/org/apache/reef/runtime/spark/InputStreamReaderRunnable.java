/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.apache.reef.runtime.spark;
import java.io.*;
//
import org.apache.log4j.Level;
import org.apache.log4j.Logger;
/**
 * The InputStreamReaderRunnable class captures
 * the output streams generated by submitting a
 * Spark job (from a Java code) to a Spark Cluster.
 *
 */
public class InputStreamReaderRunnable implements Runnable {

  static final Logger LOG = Logger.getLogger(InputStreamReaderRunnable.class);

  private String name = null;
  private BufferedReader reader = null;


  public InputStreamReaderRunnable(final InputStream is, final String name) throws UnsupportedEncodingException {
    this.name = name;
    this.reader = new BufferedReader(new InputStreamReader(is, "UTF-8"));
    LOG.info("InputStreamReaderRunnable:  name=" + name);
  }

  @Override
  public void run() {
    try {
      String line = reader.readLine();
      while (line != null) {
        LOG.info(line);
        line = reader.readLine();
      }
    } catch (IOException ioe) {
      LOG.log(Level.WARN, "InputStreamReaderRunnable: caught an IOException with stacktrace {0}", ioe);
    } finally {
      try {
        reader.close();
      }catch (IOException ioe) {
        LOG.log(Level.WARN, "InputStreamReaderRunnable: caught an IOException with stacktrace {0}", ioe);
      }
    }
  }
}
